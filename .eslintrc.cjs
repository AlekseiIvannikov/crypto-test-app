module.exports = {
  root: true,
  parser: 'vue-eslint-parser',
  env: {
    node: true,
    browser: true,
    es2022: true,
    'vue/setup-compiler-macros': true,
  },
  extends: ['plugin:vue/vue3-recommended', 'eslint:recommended', 'plugin:@typescript-eslint/recommended', 'prettier'],
  plugins: ['vue', '@typescript-eslint', 'prettier', 'import', 'vue'],
  parserOptions: {
    parser: '@typescript-eslint/parser',
    project: './tsconfig.json',
    tsconfigRootDir: __dirname,
    ecmaVersion: 2022,
    sourceType: 'module',
    extraFileExtensions: ['.vue'],
    env: {
      'vue/setup-compiler-macros': true,
    },
  },
  rules: {
    semi: ['warn', 'always'],
    quotes: ['warn', 'single', { avoidEscape: true }],
    curly: ['warn', 'multi-line'],
    'prettier/prettier': 'warn',
    'no-case-declarations': 'off',
    '@typescript-eslint/no-explicit-any': 'error',
    'vue-a11y/no-static-element-interactions': 'off',
    'vue/valid-template-root': 'off',
    'vue/no-multiple-template-root': 'off',
    'vue/require-default-prop': 'off',
    'vue/multi-word-component-names': 0,
    'vue/no-unused-vars': 'error',
    'vue/attribute-hyphenation': ['warn', 'always'],
    'vue/require-prop-types': 'error',
    'vue/prop-name-casing': ['error', 'camelCase'],
    'vue/component-name-in-template-casing': ['error', 'PascalCase'],
    'vue/component-definition-name-casing': ['error', 'PascalCase'],
    'vue/custom-event-name-casing': ['error', 'camelCase'],
    'vue/no-duplicate-attr-inheritance': 'error',
    'vue/this-in-template': ['error', 'never'],
    'vue/v-on-style': ['warn', 'shorthand'],
    'vue/no-multi-spaces': 'warn',
    'vue/padding-line-between-blocks': 'warn',
    'vue/component-tags-order': [
      'error',
      {
        order: ['template', 'script', 'style'],
      },
    ],
    'vue/order-in-components': [
      'warn',
      {
        order: [
          'ref',
          'reactive',
          'computed',
          'watch',
          'watchEffect',
          'lifecycleHooks',
          'methods',
        ],
      },
    ],
    'import/order': [
      'warn',
      {
        groups: ['builtin', 'external', 'internal', 'parent', 'sibling', 'index', 'object', 'type'],
        pathGroups: [
          {
            pattern: '@/**',
            group: 'internal',
          },
        ],
        pathGroupsExcludedImportTypes: ['builtin'],
        'newlines-between': 'always',
        alphabetize: { order: 'asc', caseInsensitive: true },
      },
    ],
  },
  ignorePatterns: ['dist/', 'node_modules/', 'build/', '.eslintrc.cjs', 'vite.config.js', 'tailwind.config.js'],
};
